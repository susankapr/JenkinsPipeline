pipeline {
   agent {
        docker { image 'homebrew/brew'
                 reuseNode true
                 args '--entrypoint='
        }
   }
   stages {
//      stage('Cfn-lint - check cloud formation syntax') {
//         agent {
//            docker { image 'alpine/cfn-lint'
//                     args '--entrypoint='
//            }
//         }
//         steps {
//            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
//               sh "cfn-lint -f json templates/* > cfn-lint-output.json"
//            }
//         }
//      }
//      stage('Cfn-nag - check cloud formation security') {
//         agent {
//            docker { image 'alpine/cfn-nag'
//                     args '--entrypoint='
//            }
//         }
//         steps {
//            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
//               sh "cfn_nag_scan -g --input-path templates/*"
//            }
//         }
//      }
      stage('Install the software') {
         steps {
            sh "brew install cfn-lint"
            sh "brew install cloudformation-guard"
         }
      }
      stage('Cfn-lint - check cloud formation syntax') {
         steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {               
               sh "cfn-lint --output-file lint-output.json -f json templates/*"
            }
         }
      }
      stage('Cfn-guard - check cloud formation policies') {
         steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
               sh "cfn-guard validate -p --data templates --rules guard-rules > guard-output.json"
            }
         }
      }
   }
   post {
      always {
          recordIssues( enabledForFailure: false, aggregatingResults: true, tool: issues() )
      }
   }
}
