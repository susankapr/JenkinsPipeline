pipeline {
   agent none
   stages {
      stage('Cfn-lint - check cloud formation syntax') {
         agent {
            docker { image 'alpine/cfn-lint'
                     args '--entrypoint='
            }
         }
         steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
               sh "cfn-lint -f pretty templates/*"
            }
         }
      }
      stage('Cfn-nag - check cloud formation security') {
         agent {
            docker { image 'alpine/cfn-nag'
                     args '--entrypoint='
            }
         }
         steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
               sh "cfn_nag_scan --input-path templates/volume.xml"
            }
         }
      }
      stage('Cfn-guard - check cloud formation policies') {
         agent {
            docker { image 'homebrew/brew'
                     args '--entrypoint='
            }
         }
         steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
               sh "brew install cloudformation-guard"
               sh "cfn-guard validate -o single-line-summary --data templates --rules guard-rules"
            }
         }
      }
   }
   // post {
   //    always {
   //       junit(
   //          allowEmptyResults: true,
   //          testResults: '*.xml'
   //       )
   //       recordIssues(
   //          enabledForFailure: true, aggregatingResults: true,
   //          tools: [java(), checkStyle(pattern: 'main.xml', reportEncoding: 'UTF-8')]
   //       )
   //    }
   // }
}
