pipeline {
   agent {
      docker { image 'python:3.7.2' }
   //    label 'slave'
   }
   
   stages {
      stage('Hello') {
          steps {
              // sh 'java -version'
              echo "Get working directory"
              sh "pwd"
              sh "python --version"
              sh "pip --version"
              sh "set -s globstar"
              // sh "pip install cfn-lint"
              // sh "cfn-lint -f junit --output-file output.xml templates/*"
              sh "pip install bash"
              sh "which bash"
              sh 'bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"'
              // sh "echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> /root/.profile"
              sh 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"'
              sh 'test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)'
              sh 'test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)'             
              sh 'brew install gcc'
              sh 'brew install cloudformation-guard'
              sh 'cfn-guard --help'
          }
      }
   }
   // post {
   //    always {
   //       junit(
   //          allowEmptyResults: true,
   //          testResults: '*.xml'
   //       )
   //       recordIssues(
   //          enabledForFailure: true, aggregatingResults: true,
   //          tools: [java(), checkStyle(pattern: 'main.xml', reportEncoding: 'UTF-8')]
   //       )
   //    }
   // }
}
